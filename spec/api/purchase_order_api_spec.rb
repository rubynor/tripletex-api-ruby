=begin
#Tripletex API



OpenAPI spec version: 2.69.5

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.24

=end

require 'spec_helper'
require 'json'

# Unit tests for TripletexRubyClient::PurchaseOrderApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PurchaseOrderApi' do
  before do
    # run before each test
    @instance = TripletexRubyClient::PurchaseOrderApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PurchaseOrderApi' do
    it 'should create an instance of PurchaseOrderApi' do
      expect(@instance).to be_instance_of(TripletexRubyClient::PurchaseOrderApi)
    end
  end

  # unit tests for delete
  #  [BETA] Delete purchase order.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_attachment
  # [BETA] Delete attachment.
  # 
  # @param id ID of purchase order containing the attachment to delete.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_attachment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get
  #  [BETA] Find purchase order by ID.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Fields filter pattern
  # @return [ResponseWrapperPurchaseOrder]
  describe 'get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post
  # [BETA] Creates a new purchase order
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [PurchaseOrder] :body JSON representing the new object to be created. Should not have ID and version set.
  # @return [ResponseWrapperPurchaseOrder]
  describe 'post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put
  #  [BETA] Update purchase order.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [PurchaseOrder] :body Partial object describing what should be updated
  # @return [ResponseWrapperPurchaseOrder]
  describe 'put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search
  # [BETA] Find purchase orders with send data
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :number Equals
  # @option opts [String] :delivery_date_from Format is yyyy-MM-dd (from and incl.).
  # @option opts [String] :delivery_date_to Format is yyyy-MM-dd (to and incl.).
  # @option opts [String] :creation_date_from Format is yyyy-MM-dd (from and incl.).
  # @option opts [String] :creation_date_to Format is yyyy-MM-dd (to and incl.).
  # @option opts [String] :id List of IDs
  # @option opts [String] :supplier_id List of IDs
  # @option opts [String] :project_id List of IDs
  # @option opts [BOOLEAN] :is_closed Equals
  # @option opts [BOOLEAN] :with_deviation_only Equals
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [ListResponsePurchaseOrder]
  describe 'search test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send
  # [BETA] Send purchase order by id and sendType.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :send_type Send type.DEFAULT will determine the send parameter based on the supplier type.If supplier is not wholesaler, receiverEmail from the PO will be used if it&#39;s specified.If receiverEmail empty it will take the vendor email.
  # @return [ResponseWrapperPurchaseOrder]
  describe 'send test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_by_email
  # [BETA] Send purchase order by customisable email.
  # 
  # @param id Element ID
  # @param email_address Email address
  # @param subject Subject
  # @param [Hash] opts the optional parameters
  # @option opts [String] :message Message
  # @return [ResponseWrapperPurchaseOrder]
  describe 'send_by_email test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upload_attachment
  # [BETA] Upload attachment to Purchase Order.
  # 
  # @param id Purchase Order ID to upload attachment to.
  # @param file The file
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Fields filter pattern
  # @return [ResponseWrapperPurchaseOrder]
  describe 'upload_attachment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upload_attachments
  # Upload multiple attachments to Purchase Order.
  # 
  # @param id Purchase Order ID to upload attachment to.
  # @param body Multipart files
  # @param [Hash] opts the optional parameters
  # @return [ResponseWrapperPurchaseOrder]
  describe 'upload_attachments test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
