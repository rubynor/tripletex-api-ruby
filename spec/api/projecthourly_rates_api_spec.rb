=begin
#Tripletex API



OpenAPI spec version: 2.69.5

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.24

=end

require 'spec_helper'
require 'json'

# Unit tests for TripletexRubyClient::ProjecthourlyRatesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ProjecthourlyRatesApi' do
  before do
    # run before each test
    @instance = TripletexRubyClient::ProjecthourlyRatesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProjecthourlyRatesApi' do
    it 'should create an instance of ProjecthourlyRatesApi' do
      expect(@instance).to be_instance_of(TripletexRubyClient::ProjecthourlyRatesApi)
    end
  end

  # unit tests for delete
  # Delete Project Hourly Rate 
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_by_ids
  # Delete project hourly rates.
  # 
  # @param ids ID of the elements
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_by_ids test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_by_project_ids
  # Delete project hourly rates by project id.
  # 
  # @param ids ID of the elements
  # @param date yyyy-MM-dd. Defaults to today.
  # @param [Hash] opts the optional parameters
  # @return [ListResponseProject]
  describe 'delete_by_project_ids test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get
  # Find project hourly rate by ID.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Fields filter pattern
  # @return [ResponseWrapperProjectHourlyRate]
  describe 'get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post
  # Create a project hourly rate. 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [ProjectHourlyRate] :body JSON representing the new object to be created. Should not have ID and version set.
  # @return [ResponseWrapperProjectHourlyRate]
  describe 'post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_list
  # Create multiple project hourly rates.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<ProjectHourlyRate>] :body JSON representing a list of new object to be created. Should not have ID and version set.
  # @return [ListResponseProjectHourlyRate]
  describe 'post_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put
  # Update a project hourly rate.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [ProjectHourlyRate] :body Partial object describing what should be updated
  # @return [ResponseWrapperProjectHourlyRate]
  describe 'put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_list
  # Update multiple project hourly rates.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<ProjectHourlyRate>] :body JSON representing updates to object. Should have ID and version set.
  # @return [ListResponseProjectHourlyRate]
  describe 'put_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search
  # Find project hourly rates corresponding with sent data.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :id List of IDs
  # @option opts [String] :project_id List of IDs
  # @option opts [String] :type Equals
  # @option opts [String] :start_date_from From and including
  # @option opts [String] :start_date_to To and excluding
  # @option opts [BOOLEAN] :show_in_project_order Equals
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [ListResponseProjectHourlyRate]
  describe 'search test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_or_add_hour_rates
  # Update or add the same project hourly rate from project overview.
  # 
  # @param ids ID of the elements
  # @param [Hash] opts the optional parameters
  # @option opts [HourlyRate] :body JSON representing updates to object. Should have ID and version set.
  # @return [ListResponseProjectHourlyRate]
  describe 'update_or_add_hour_rates test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
