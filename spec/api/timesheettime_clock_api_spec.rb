=begin
#Tripletex API



OpenAPI spec version: 2.69.5

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.24

=end

require 'spec_helper'
require 'json'

# Unit tests for TripletexRubyClient::TimesheettimeClockApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TimesheettimeClockApi' do
  before do
    # run before each test
    @instance = TripletexRubyClient::TimesheettimeClockApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TimesheettimeClockApi' do
    it 'should create an instance of TimesheettimeClockApi' do
      expect(@instance).to be_instance_of(TripletexRubyClient::TimesheettimeClockApi)
    end
  end

  # unit tests for get
  # Find time clock entry by ID.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Fields filter pattern
  # @return [ResponseWrapperTimeClock]
  describe 'get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_present
  # Find a user’s present running time clock.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :employee_id Employee ID. Defaults to ID of token owner.
  # @option opts [String] :fields Fields filter pattern
  # @return [ResponseWrapperTimeClock]
  describe 'get_present test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put
  # Update time clock by ID.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [TimeClock] :body Partial object describing what should be updated
  # @return [ResponseWrapperTimeClock]
  describe 'put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search
  # Find time clock entries corresponding with sent data.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :id List of IDs
  # @option opts [String] :employee_id List of IDs
  # @option opts [String] :project_id List of IDs
  # @option opts [String] :activity_id List of IDs
  # @option opts [String] :date_from From and including
  # @option opts [String] :date_to To and excluding
  # @option opts [String] :hour_id List of IDs
  # @option opts [BOOLEAN] :is_running Equals
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [ListResponseTimeClock]
  describe 'search test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for start
  # Start time clock.
  # 
  # @param activity_id Activity ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :employee_id Employee ID. Defaults to ID of token owner.
  # @option opts [Integer] :project_id Project ID
  # @option opts [String] :date Optional. Default is today’s date
  # @return [ResponseWrapperTimeClock]
  describe 'start test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for stop
  # Stop time clock.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :version Number of current version
  # @return [nil]
  describe 'stop test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
