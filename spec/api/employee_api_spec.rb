=begin
#Tripletex API



OpenAPI spec version: 2.69.5

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.24

=end

require 'spec_helper'
require 'json'

# Unit tests for TripletexRubyClient::EmployeeApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'EmployeeApi' do
  before do
    # run before each test
    @instance = TripletexRubyClient::EmployeeApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EmployeeApi' do
    it 'should create an instance of EmployeeApi' do
      expect(@instance).to be_instance_of(TripletexRubyClient::EmployeeApi)
    end
  end

  # unit tests for get
  # Get employee by ID.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Fields filter pattern
  # @return [ResponseWrapperEmployee]
  describe 'get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post
  # [BETA] Create one employee.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Employee] :body JSON representing the new object to be created. Should not have ID and version set.
  # @return [ResponseWrapperEmployee]
  describe 'post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_list
  # [BETA] Create several employees.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Employee>] :body JSON representing a list of new object to be created. Should not have ID and version set.
  # @return [ListResponseEmployee]
  describe 'post_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put
  # Update employee.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [Employee] :body Partial object describing what should be updated
  # @return [ResponseWrapperEmployee]
  describe 'put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search
  # Find employees corresponding with sent data.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :id List of IDs
  # @option opts [String] :first_name Containing
  # @option opts [String] :last_name Containing
  # @option opts [String] :employee_number Containing
  # @option opts [BOOLEAN] :allow_information_registration Equals
  # @option opts [BOOLEAN] :include_contacts Equals
  # @option opts [String] :department_id List of IDs
  # @option opts [BOOLEAN] :only_project_managers Equals
  # @option opts [BOOLEAN] :only_contacts Equals
  # @option opts [BOOLEAN] :assignable_project_managers Equals
  # @option opts [String] :period_start Equals
  # @option opts [String] :period_end Equals
  # @option opts [BOOLEAN] :has_system_access Equals
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [ListResponseEmployee]
  describe 'search test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
