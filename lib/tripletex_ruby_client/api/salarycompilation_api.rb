=begin
#Tripletex API



OpenAPI spec version: 2.69.5

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.24

=end

require 'uri'

module TripletexRubyClient
  class SalarycompilationApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # [BETA] Find salary compilation (PDF document) by employee.
    # 
    # @param employee_id Element ID
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :year Must be between 1900-2100. Defaults to previous year.
    # @option opts [String] :return_type 'String' type set as default
    # @return [String]
    def download_pdf(employee_id, opts = {})
      data, _status_code, _headers = download_pdf_with_http_info(employee_id, opts)
      data
    end

    # [BETA] Find salary compilation (PDF document) by employee.
    # 
    # @param employee_id Element ID
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :year Must be between 1900-2100. Defaults to previous year.
    # @option opts [String] :return_type 'String' type set as default
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def download_pdf_with_http_info(employee_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SalarycompilationApi.download_pdf ...'
      end
      # verify the required parameter 'employee_id' is set
      if @api_client.config.client_side_validation && employee_id.nil?
        fail ArgumentError, "Missing the required parameter 'employee_id' when calling SalarycompilationApi.download_pdf"
      end
      # resource path
      local_var_path = '/salary/compilation/pdf'

      # query parameters
      query_params = {}
      query_params[:'employeeId'] = employee_id
      query_params[:'year'] = opts[:'year'] if !opts[:'year'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/octet-stream'])

      # form parameters
      form_params = {}

      # return_type
      return_type = opts[:'return_type'] || 'String'

      # http body (model)
      post_body = nil
      auth_names = ['tokenAuthScheme']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SalarycompilationApi#download_pdf\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # [BETA] Find salary compilation by employee.
    # 
    # @param employee_id Element ID
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :year Must be between 1900-2100. Defaults to previous year.
    # @option opts [String] :fields Fields filter pattern
    # @return [ResponseWrapperSalaryCompilation]
    def get(employee_id, opts = {})
      data, _status_code, _headers = get_with_http_info(employee_id, opts)
      data
    end

    # [BETA] Find salary compilation by employee.
    # 
    # @param employee_id Element ID
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :year Must be between 1900-2100. Defaults to previous year.
    # @option opts [String] :fields Fields filter pattern
    # @return [Array<(ResponseWrapperSalaryCompilation, Fixnum, Hash)>] ResponseWrapperSalaryCompilation data, response status code and response headers
    def get_with_http_info(employee_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SalarycompilationApi.get ...'
      end
      # verify the required parameter 'employee_id' is set
      if @api_client.config.client_side_validation && employee_id.nil?
        fail ArgumentError, "Missing the required parameter 'employee_id' when calling SalarycompilationApi.get"
      end
      # resource path
      local_var_path = '/salary/compilation'

      # query parameters
      query_params = {}
      query_params[:'employeeId'] = employee_id
      query_params[:'year'] = opts[:'year'] if !opts[:'year'].nil?
      query_params[:'fields'] = opts[:'fields'] if !opts[:'fields'].nil?

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['tokenAuthScheme']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ResponseWrapperSalaryCompilation')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SalarycompilationApi#get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
