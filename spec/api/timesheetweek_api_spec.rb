=begin
#Tripletex API



OpenAPI spec version: 2.69.5

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.24

=end

require 'spec_helper'
require 'json'

# Unit tests for TripletexRubyClient::TimesheetweekApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TimesheetweekApi' do
  before do
    # run before each test
    @instance = TripletexRubyClient::TimesheetweekApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TimesheetweekApi' do
    it 'should create an instance of TimesheetweekApi' do
      expect(@instance).to be_instance_of(TripletexRubyClient::TimesheetweekApi)
    end
  end

  # unit tests for approve
  # Approve week. By ID or (ISO-8601 week and employeeId combination).
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id Equals
  # @option opts [Integer] :employee_id Equals
  # @option opts [String] :week_year ISO-8601 week-year
  # @return [ResponseWrapperWeek]
  describe 'approve test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for complete
  # Complete week. By ID or (ISO-8601 week and employeeId combination).
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id Equals
  # @option opts [Integer] :employee_id Equals
  # @option opts [String] :week_year ISO-8601 week-year
  # @return [ResponseWrapperWeek]
  describe 'complete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reopen
  # Reopen week. By ID or (ISO-8601 week and employeeId combination).
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id Equals
  # @option opts [Integer] :employee_id Equals
  # @option opts [String] :week_year ISO-8601 week-year
  # @return [ResponseWrapperWeek]
  describe 'reopen test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search
  # Find weekly status By ID, week/year combination, employeeId. or an approver
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ids List of IDs
  # @option opts [String] :employee_ids List of IDs
  # @option opts [String] :week_year ISO-8601 week-year
  # @option opts [Integer] :approved_by Equals
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [ListResponseWeek]
  describe 'search test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for unapprove
  # Unapprove week. By ID or (ISO-8601 week and employeeId combination).
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id Equals
  # @option opts [Integer] :employee_id Equals
  # @option opts [String] :week_year ISO-8601 week-year
  # @return [ResponseWrapperWeek]
  describe 'unapprove test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
