=begin
#Tripletex API



OpenAPI spec version: 2.69.5

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.24

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for TripletexRubyClient::StorebrandPensionOnboardingQualify
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'StorebrandPensionOnboardingQualify' do
  before do
    # run before each test
    @instance = TripletexRubyClient::StorebrandPensionOnboardingQualify.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of StorebrandPensionOnboardingQualify' do
    it 'should create an instance of StorebrandPensionOnboardingQualify' do
      expect(@instance).to be_instance_of(TripletexRubyClient::StorebrandPensionOnboardingQualify)
    end
  end
  describe 'test attribute "employee"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "valid_employees"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "required_modules"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "social_security_number_warning"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "yearly_wages_warning"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "part_time_percentage_warning"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
