=begin
#Tripletex API



OpenAPI spec version: 2.69.5

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.24

=end

require 'spec_helper'
require 'json'

# Unit tests for TripletexRubyClient::SupplierInvoiceApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SupplierInvoiceApi' do
  before do
    # run before each test
    @instance = TripletexRubyClient::SupplierInvoiceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SupplierInvoiceApi' do
    it 'should create an instance of SupplierInvoiceApi' do
      expect(@instance).to be_instance_of(TripletexRubyClient::SupplierInvoiceApi)
    end
  end

  # unit tests for add_payment
  # [BETA] Register payment, paymentType &#x3D;&#x3D; 0 finds the last paymentType for this vendor
  # 
  # @param invoice_id Invoice ID.
  # @param payment_type 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :amount 
  # @option opts [String] :kid_or_receiver_reference 
  # @option opts [String] :bban 
  # @option opts [String] :payment_date 
  # @option opts [BOOLEAN] :use_default_payment_type Set paymentType to last type for vendor, autopay, nets or first available other type
  # @option opts [BOOLEAN] :partial_payment Set to true to allow multiple payments registered.
  # @return [ResponseWrapperSupplierInvoice]
  describe 'add_payment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_recipient
  # [BETA] Add recipient to supplier invoices.
  # 
  # @param invoice_id Invoice ID.
  # @param employee_id ID of the elements
  # @param [Hash] opts the optional parameters
  # @option opts [String] :comment comment
  # @return [ResponseWrapperSupplierInvoice]
  describe 'add_recipient test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_recipient_to_many
  # [BETA] Add recipient.
  # 
  # @param employee_id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :invoice_ids ID of the elements
  # @option opts [String] :comment comment
  # @return [ListResponseSupplierInvoice]
  describe 'add_recipient_to_many test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for approve
  # [BETA] Approve supplier invoice.
  # 
  # @param invoice_id ID of the elements
  # @param [Hash] opts the optional parameters
  # @option opts [String] :comment comment
  # @return [ResponseWrapperSupplierInvoice]
  describe 'approve test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for approve_many
  # [BETA] Approve supplier invoices.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :invoice_ids ID of the elements
  # @option opts [String] :comment comment
  # @return [ListResponseSupplierInvoice]
  describe 'approve_many test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for change_dimension_many
  # Change dimension on a supplier invoice.
  # 
  # @param invoice_id Invoice ID.
  # @param dimension Dimension
  # @param dimension_id DimensionID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :debit_posting_ids ID of the elements
  # @return [ResponseWrapperSupplierInvoice]
  describe 'change_dimension_many test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_pdf
  # [BETA] Get supplierInvoice document by invoice ID.
  # 
  # @param invoice_id Invoice ID from which document is downloaded.
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'download_pdf test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get
  # [BETA] Get supplierInvoice by ID.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Fields filter pattern
  # @return [ResponseWrapperSupplierInvoice]
  describe 'get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_approval_invoices
  # [BETA] Get supplierInvoices for approval
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :search_text Search for department, employee, project and more
  # @option opts [BOOLEAN] :show_all Show all or just your own
  # @option opts [Integer] :employee_id Default is logged in employee
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [ListResponseSupplierInvoice]
  describe 'get_approval_invoices test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_postings
  # [BETA] Put debit postings.
  # 
  # @param id Voucher id
  # @param [Hash] opts the optional parameters
  # @option opts [Array<OrderLinePostingDTO>] :body Postings
  # @option opts [BOOLEAN] :send_to_ledger Equals
  # @option opts [String] :voucher_date If set, the date of the voucher and the supplier invoice will be changed to this date. If empty, date will not be changed
  # @return [ResponseWrapperSupplierInvoice]
  describe 'put_postings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reject
  # [BETA] reject supplier invoice.
  # 
  # @param invoice_id Invoice ID.
  # @param comment 
  # @param [Hash] opts the optional parameters
  # @return [ResponseWrapperSupplierInvoice]
  describe 'reject test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reject_many
  # [BETA] reject supplier invoices.
  # 
  # @param comment 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :invoice_ids ID of the elements
  # @return [ListResponseSupplierInvoice]
  describe 'reject_many test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search
  # [BETA] Find supplierInvoices corresponding with sent data.
  # 
  # @param invoice_date_from From and including
  # @param invoice_date_to To and excluding
  # @param [Hash] opts the optional parameters
  # @option opts [String] :id List of IDs
  # @option opts [String] :invoice_number Equals
  # @option opts [String] :kid Equals
  # @option opts [String] :voucher_id Equals
  # @option opts [String] :supplier_id Equals
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [ListResponseSupplierInvoice]
  describe 'search test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
