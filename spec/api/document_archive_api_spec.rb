=begin
#Tripletex API



OpenAPI spec version: 2.69.5

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.24

=end

require 'spec_helper'
require 'json'

# Unit tests for TripletexRubyClient::DocumentArchiveApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DocumentArchiveApi' do
  before do
    # run before each test
    @instance = TripletexRubyClient::DocumentArchiveApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DocumentArchiveApi' do
    it 'should create an instance of DocumentArchiveApi' do
      expect(@instance).to be_instance_of(TripletexRubyClient::DocumentArchiveApi)
    end
  end

  # unit tests for account_post
  # [BETA] Upload file to Account Document Archive.
  # 
  # @param file The file
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @return [ResponseWrapperDocumentArchive]
  describe 'account_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for customer_post
  # [BETA] Upload file to Customer Document Archive.
  # 
  # @param file The file
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @return [ResponseWrapperDocumentArchive]
  describe 'customer_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete
  # [BETA] Delete document archive.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for employee_post
  # [BETA] Upload file to Employee Document Archive.
  # 
  # @param file The file
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @return [ResponseWrapperDocumentArchive]
  describe 'employee_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account
  # [BETA] Find documents archived associated with account object type.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :period_date_from From and including
  # @option opts [String] :period_date_to To and excluding
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [ListResponseDocumentArchive]
  describe 'get_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_customer
  # [BETA] Find documents archived associated with customer object type.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :period_date_from From and including
  # @option opts [String] :period_date_to To and excluding
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [ListResponseDocumentArchive]
  describe 'get_customer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_employee
  # [BETA] Find documents archived associated with employee object type.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :period_date_from From and including
  # @option opts [String] :period_date_to To and excluding
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [ListResponseDocumentArchive]
  describe 'get_employee test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_product
  # [BETA] Find documents archived associated with product object type.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :period_date_from From and including
  # @option opts [String] :period_date_to To and excluding
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [ListResponseDocumentArchive]
  describe 'get_product test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project
  # [BETA] Find documents archived associated with project object type.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :period_date_from From and including
  # @option opts [String] :period_date_to To and excluding
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [ListResponseDocumentArchive]
  describe 'get_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_prospect
  # [BETA] Find documents archived associated with prospect object type.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :period_date_from From and including
  # @option opts [String] :period_date_to To and excluding
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [ListResponseDocumentArchive]
  describe 'get_prospect test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_supplier
  # [BETA] Find documents archived associated with supplier object type.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :period_date_from From and including
  # @option opts [String] :period_date_to To and excluding
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [ListResponseDocumentArchive]
  describe 'get_supplier test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for product_post
  # [BETA] Upload file to Product Document Archive.
  # 
  # @param file The file
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @return [ResponseWrapperDocumentArchive]
  describe 'product_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_post
  # [BETA] Upload file to Project Document Archive.
  # 
  # @param file The file
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @return [ResponseWrapperDocumentArchive]
  describe 'project_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for prospect_post
  # [BETA] Upload file to Prospect Document Archive.
  # 
  # @param file The file
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @return [ResponseWrapperDocumentArchive]
  describe 'prospect_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put
  # [BETA] Update document archive.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [DocumentArchive] :body Partial object describing what should be updated
  # @return [ResponseWrapperDocumentArchive]
  describe 'put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reception_post
  # [BETA] Upload a file to the document archive reception. Send as multipart form.
  # 
  # @param file The file
  # @param [Hash] opts the optional parameters
  # @return [ResponseWrapperDocumentArchive]
  describe 'reception_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for supplier_post
  # [BETA] Upload file to Supplier Document Archive.
  # 
  # @param file The file
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @return [ResponseWrapperDocumentArchive]
  describe 'supplier_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
