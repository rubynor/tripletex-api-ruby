=begin
#Tripletex API



OpenAPI spec version: 2.69.5

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.24

=end

require 'spec_helper'
require 'json'

# Unit tests for TripletexRubyClient::BankstatementApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'BankstatementApi' do
  before do
    # run before each test
    @instance = TripletexRubyClient::BankstatementApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BankstatementApi' do
    it 'should create an instance of BankstatementApi' do
      expect(@instance).to be_instance_of(TripletexRubyClient::BankstatementApi)
    end
  end

  # unit tests for delete
  # [BETA] Delete bank statement by ID.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get
  # [BETA] Get bank statement.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Fields filter pattern
  # @return [ResponseWrapperBankStatement]
  describe 'get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for import_bank_statement
  # [BETA] Upload bank statement file.
  # 
  # @param bank_id Bank ID
  # @param account_id Account ID
  # @param from_date Format is yyyy-MM-dd (from and incl.).
  # @param to_date Format is yyyy-MM-dd (to and excl.).
  # @param file_format File format
  # @param file The bank statement file
  # @param [Hash] opts the optional parameters
  # @option opts [String] :external_id External ID
  # @return [ResponseWrapperBankStatement]
  describe 'import_bank_statement test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search
  # [BETA] Find bank statement corresponding with sent data.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :id List of IDs
  # @option opts [String] :account_id List of IDs
  # @option opts [String] :file_format File format
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [ListResponseBankStatement]
  describe 'search test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
