=begin
#Tripletex API



OpenAPI spec version: 2.69.5

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.24

=end

require 'spec_helper'
require 'json'

# Unit tests for TripletexRubyClient::EmployeeentitlementApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'EmployeeentitlementApi' do
  before do
    # run before each test
    @instance = TripletexRubyClient::EmployeeentitlementApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EmployeeentitlementApi' do
    it 'should create an instance of EmployeeentitlementApi' do
      expect(@instance).to be_instance_of(TripletexRubyClient::EmployeeentitlementApi)
    end
  end

  # unit tests for client
  # [BETA] Find all entitlements at client for user.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :employee_id Employee ID. Defaults to ID of token owner.
  # @option opts [Integer] :customer_id Client ID
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [ListResponseEntitlement]
  describe 'client test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get
  # Get entitlement by ID.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Fields filter pattern
  # @return [ResponseWrapperEntitlement]
  describe 'get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for grant_client_entitlements_by_template
  # [BETA] Update employee entitlements in client account.
  # 
  # @param employee_id Employee ID
  # @param customer_id Client ID
  # @param template Template
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :add_to_existing Add template to existing entitlements
  # @return [nil]
  describe 'grant_client_entitlements_by_template test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for grant_entitlements_by_template
  # [BETA] Update employee entitlements.
  # The user will only receive the entitlements which are possible with the registered user type
  # @param employee_id Employee ID
  # @param template Template
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'grant_entitlements_by_template test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search
  # Find all entitlements for user.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :employee_id Employee ID. Defaults to ID of token owner.
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [ListResponseEntitlement]
  describe 'search test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
