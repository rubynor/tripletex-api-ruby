=begin
#Tripletex API



OpenAPI spec version: 2.69.5

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.24

=end

require 'uri'

module TripletexRubyClient
  class SaftApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # [BETA] Create SAF-T export for the Tripletex account.
    # 
    # @param year Year to export
    # @param [Hash] opts the optional parameters
    # @return [String]
    def export_saft(year, opts = {})
      data, _status_code, _headers = export_saft_with_http_info(year, opts)
      data
    end

    # [BETA] Create SAF-T export for the Tripletex account.
    # 
    # @param year Year to export
    # @param [Hash] opts the optional parameters
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def export_saft_with_http_info(year, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SaftApi.export_saft ...'
      end
      # verify the required parameter 'year' is set
      if @api_client.config.client_side_validation && year.nil?
        fail ArgumentError, "Missing the required parameter 'year' when calling SaftApi.export_saft"
      end
      # resource path
      local_var_path = '/saft/exportSAFT'

      # query parameters
      query_params = {}
      query_params[:'year'] = year

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/octet-stream'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['tokenAuthScheme']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SaftApi#export_saft\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # [BETA] Import SAF-T. Send XML file as multipart form.
    # 
    # @param saft_file The SAF-T file (XML)
    # @param mapping_file Mapping of chart of accounts (Excel). See https://tripletex.no/resources/examples/saft_account_mapping.xls
    # @param import_customer_vendors Create customers and suppliers
    # @param create_missing_accounts Create new accounts
    # @param import_start_balance_from_opening Create an opening balance from the import file&#39;s starting balance.
    # @param import_start_balance_from_closing Create an opening balance from the import file&#39;s outgoing balance.
    # @param import_vouchers Create vouchers
    # @param import_departments Create departments
    # @param import_projects Create projects
    # @param tripletex_generates_customer_numbers Let Tripletex create customer and supplier numbers and ignore the numbers in the import file.
    # @param create_customer_ib Create an opening balance on accounts receivable from customers
    # @param update_account_names Overwrite existing names on accounts
    # @param create_vendor_ib Create an opening balance on accounts payable
    # @param override_voucher_date_on_discrepancy Overwrite transaction date on period discrepancies.
    # @param overwrite_customers_contacts Overwrite existing customers/contacts
    # @param only_active_customers Only active customers
    # @param only_active_accounts Only active accounts
    # @param update_start_balance Update the opening balance of main ledger accounts from the import file by import before the opening balance.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def import_saft(saft_file, mapping_file, import_customer_vendors, create_missing_accounts, import_start_balance_from_opening, import_start_balance_from_closing, import_vouchers, import_departments, import_projects, tripletex_generates_customer_numbers, create_customer_ib, update_account_names, create_vendor_ib, override_voucher_date_on_discrepancy, overwrite_customers_contacts, only_active_customers, only_active_accounts, update_start_balance, opts = {})
      import_saft_with_http_info(saft_file, mapping_file, import_customer_vendors, create_missing_accounts, import_start_balance_from_opening, import_start_balance_from_closing, import_vouchers, import_departments, import_projects, tripletex_generates_customer_numbers, create_customer_ib, update_account_names, create_vendor_ib, override_voucher_date_on_discrepancy, overwrite_customers_contacts, only_active_customers, only_active_accounts, update_start_balance, opts)
      nil
    end

    # [BETA] Import SAF-T. Send XML file as multipart form.
    # 
    # @param saft_file The SAF-T file (XML)
    # @param mapping_file Mapping of chart of accounts (Excel). See https://tripletex.no/resources/examples/saft_account_mapping.xls
    # @param import_customer_vendors Create customers and suppliers
    # @param create_missing_accounts Create new accounts
    # @param import_start_balance_from_opening Create an opening balance from the import file&#39;s starting balance.
    # @param import_start_balance_from_closing Create an opening balance from the import file&#39;s outgoing balance.
    # @param import_vouchers Create vouchers
    # @param import_departments Create departments
    # @param import_projects Create projects
    # @param tripletex_generates_customer_numbers Let Tripletex create customer and supplier numbers and ignore the numbers in the import file.
    # @param create_customer_ib Create an opening balance on accounts receivable from customers
    # @param update_account_names Overwrite existing names on accounts
    # @param create_vendor_ib Create an opening balance on accounts payable
    # @param override_voucher_date_on_discrepancy Overwrite transaction date on period discrepancies.
    # @param overwrite_customers_contacts Overwrite existing customers/contacts
    # @param only_active_customers Only active customers
    # @param only_active_accounts Only active accounts
    # @param update_start_balance Update the opening balance of main ledger accounts from the import file by import before the opening balance.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def import_saft_with_http_info(saft_file, mapping_file, import_customer_vendors, create_missing_accounts, import_start_balance_from_opening, import_start_balance_from_closing, import_vouchers, import_departments, import_projects, tripletex_generates_customer_numbers, create_customer_ib, update_account_names, create_vendor_ib, override_voucher_date_on_discrepancy, overwrite_customers_contacts, only_active_customers, only_active_accounts, update_start_balance, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SaftApi.import_saft ...'
      end
      # verify the required parameter 'saft_file' is set
      if @api_client.config.client_side_validation && saft_file.nil?
        fail ArgumentError, "Missing the required parameter 'saft_file' when calling SaftApi.import_saft"
      end
      # verify the required parameter 'mapping_file' is set
      if @api_client.config.client_side_validation && mapping_file.nil?
        fail ArgumentError, "Missing the required parameter 'mapping_file' when calling SaftApi.import_saft"
      end
      # verify the required parameter 'import_customer_vendors' is set
      if @api_client.config.client_side_validation && import_customer_vendors.nil?
        fail ArgumentError, "Missing the required parameter 'import_customer_vendors' when calling SaftApi.import_saft"
      end
      # verify the required parameter 'create_missing_accounts' is set
      if @api_client.config.client_side_validation && create_missing_accounts.nil?
        fail ArgumentError, "Missing the required parameter 'create_missing_accounts' when calling SaftApi.import_saft"
      end
      # verify the required parameter 'import_start_balance_from_opening' is set
      if @api_client.config.client_side_validation && import_start_balance_from_opening.nil?
        fail ArgumentError, "Missing the required parameter 'import_start_balance_from_opening' when calling SaftApi.import_saft"
      end
      # verify the required parameter 'import_start_balance_from_closing' is set
      if @api_client.config.client_side_validation && import_start_balance_from_closing.nil?
        fail ArgumentError, "Missing the required parameter 'import_start_balance_from_closing' when calling SaftApi.import_saft"
      end
      # verify the required parameter 'import_vouchers' is set
      if @api_client.config.client_side_validation && import_vouchers.nil?
        fail ArgumentError, "Missing the required parameter 'import_vouchers' when calling SaftApi.import_saft"
      end
      # verify the required parameter 'import_departments' is set
      if @api_client.config.client_side_validation && import_departments.nil?
        fail ArgumentError, "Missing the required parameter 'import_departments' when calling SaftApi.import_saft"
      end
      # verify the required parameter 'import_projects' is set
      if @api_client.config.client_side_validation && import_projects.nil?
        fail ArgumentError, "Missing the required parameter 'import_projects' when calling SaftApi.import_saft"
      end
      # verify the required parameter 'tripletex_generates_customer_numbers' is set
      if @api_client.config.client_side_validation && tripletex_generates_customer_numbers.nil?
        fail ArgumentError, "Missing the required parameter 'tripletex_generates_customer_numbers' when calling SaftApi.import_saft"
      end
      # verify the required parameter 'create_customer_ib' is set
      if @api_client.config.client_side_validation && create_customer_ib.nil?
        fail ArgumentError, "Missing the required parameter 'create_customer_ib' when calling SaftApi.import_saft"
      end
      # verify the required parameter 'update_account_names' is set
      if @api_client.config.client_side_validation && update_account_names.nil?
        fail ArgumentError, "Missing the required parameter 'update_account_names' when calling SaftApi.import_saft"
      end
      # verify the required parameter 'create_vendor_ib' is set
      if @api_client.config.client_side_validation && create_vendor_ib.nil?
        fail ArgumentError, "Missing the required parameter 'create_vendor_ib' when calling SaftApi.import_saft"
      end
      # verify the required parameter 'override_voucher_date_on_discrepancy' is set
      if @api_client.config.client_side_validation && override_voucher_date_on_discrepancy.nil?
        fail ArgumentError, "Missing the required parameter 'override_voucher_date_on_discrepancy' when calling SaftApi.import_saft"
      end
      # verify the required parameter 'overwrite_customers_contacts' is set
      if @api_client.config.client_side_validation && overwrite_customers_contacts.nil?
        fail ArgumentError, "Missing the required parameter 'overwrite_customers_contacts' when calling SaftApi.import_saft"
      end
      # verify the required parameter 'only_active_customers' is set
      if @api_client.config.client_side_validation && only_active_customers.nil?
        fail ArgumentError, "Missing the required parameter 'only_active_customers' when calling SaftApi.import_saft"
      end
      # verify the required parameter 'only_active_accounts' is set
      if @api_client.config.client_side_validation && only_active_accounts.nil?
        fail ArgumentError, "Missing the required parameter 'only_active_accounts' when calling SaftApi.import_saft"
      end
      # verify the required parameter 'update_start_balance' is set
      if @api_client.config.client_side_validation && update_start_balance.nil?
        fail ArgumentError, "Missing the required parameter 'update_start_balance' when calling SaftApi.import_saft"
      end
      # resource path
      local_var_path = '/saft/importSAFT'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['multipart/form-data'])

      # form parameters
      form_params = {}
      form_params['saftFile'] = saft_file
      form_params['mappingFile'] = mapping_file
      form_params['importCustomerVendors'] = import_customer_vendors
      form_params['createMissingAccounts'] = create_missing_accounts
      form_params['importStartBalanceFromOpening'] = import_start_balance_from_opening
      form_params['importStartBalanceFromClosing'] = import_start_balance_from_closing
      form_params['importVouchers'] = import_vouchers
      form_params['importDepartments'] = import_departments
      form_params['importProjects'] = import_projects
      form_params['tripletexGeneratesCustomerNumbers'] = tripletex_generates_customer_numbers
      form_params['createCustomerIB'] = create_customer_ib
      form_params['updateAccountNames'] = update_account_names
      form_params['createVendorIB'] = create_vendor_ib
      form_params['overrideVoucherDateOnDiscrepancy'] = override_voucher_date_on_discrepancy
      form_params['overwriteCustomersContacts'] = overwrite_customers_contacts
      form_params['onlyActiveCustomers'] = only_active_customers
      form_params['onlyActiveAccounts'] = only_active_accounts
      form_params['updateStartBalance'] = update_start_balance

      # http body (model)
      post_body = nil
      auth_names = ['tokenAuthScheme']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SaftApi#import_saft\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
