=begin
#Tripletex API



OpenAPI spec version: 2.69.5

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.24

=end

require 'spec_helper'
require 'json'

# Unit tests for TripletexRubyClient::ProjectApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ProjectApi' do
  before do
    # run before each test
    @instance = TripletexRubyClient::ProjectApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProjectApi' do
    it 'should create an instance of ProjectApi' do
      expect(@instance).to be_instance_of(TripletexRubyClient::ProjectApi)
    end
  end

  # unit tests for delete
  # [BETA] Delete project.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_by_ids
  # [BETA] Delete projects.
  # 
  # @param ids ID of the elements
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_by_ids test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_list
  # [BETA] Delete multiple projects.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Project>] :body JSON representing objects to delete. Should have ID and version set.
  # @return [nil]
  describe 'delete_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get
  # Find project by ID.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Fields filter pattern
  # @return [ResponseWrapperProject]
  describe 'get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_for_time_sheet
  # Find projects applicable for time sheet registration on a specific day.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :employee_id Employee ID. Defaults to ID of token owner.
  # @option opts [String] :date yyyy-MM-dd. Defaults to today.
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [ListResponseProject]
  describe 'get_for_time_sheet test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post
  # [BETA] Add new project.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Project] :body JSON representing the new object to be created. Should not have ID and version set.
  # @return [ResponseWrapperProject]
  describe 'post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_list
  # [BETA] Register new projects. Multiple projects for different users can be sent in the same request.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Project>] :body JSON representing a list of new object to be created. Should not have ID and version set.
  # @return [ListResponseProject]
  describe 'post_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put
  # [BETA] Update project.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [Project] :body Partial object describing what should be updated
  # @return [ResponseWrapperProject]
  describe 'put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_list
  # [BETA] Update multiple projects.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Project>] :body JSON representing updates to object. Should have ID and version set.
  # @return [ListResponseProject]
  describe 'put_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search
  # Find projects corresponding with sent data.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :id List of IDs
  # @option opts [String] :name Containing
  # @option opts [String] :number Equals
  # @option opts [BOOLEAN] :is_offer Equals
  # @option opts [String] :project_manager_id List of IDs
  # @option opts [String] :employee_in_project_id List of IDs
  # @option opts [String] :department_id List of IDs
  # @option opts [String] :start_date_from From and including
  # @option opts [String] :start_date_to To and excluding
  # @option opts [String] :end_date_from From and including
  # @option opts [String] :end_date_to To and excluding
  # @option opts [BOOLEAN] :is_closed Equals
  # @option opts [String] :customer_id Equals
  # @option opts [String] :external_accounts_number Containing
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [ListResponseProject]
  describe 'search test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
