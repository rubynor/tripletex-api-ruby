=begin
#Tripletex API



OpenAPI spec version: 2.69.5

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.24

=end

require 'spec_helper'
require 'json'

# Unit tests for TripletexRubyClient::TimesheetentryApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TimesheetentryApi' do
  before do
    # run before each test
    @instance = TripletexRubyClient::TimesheetentryApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TimesheetentryApi' do
    it 'should create an instance of TimesheetentryApi' do
      expect(@instance).to be_instance_of(TripletexRubyClient::TimesheetentryApi)
    end
  end

  # unit tests for delete
  # Delete timesheet entry by ID.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :version Number of current version
  # @return [nil]
  describe 'delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get
  # Find timesheet entry by ID.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Fields filter pattern
  # @return [ResponseWrapperTimesheetEntry]
  describe 'get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_recent_activities
  # Find recently used timesheet activities.
  # 
  # @param project_id ID of project to find activities for
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :employee_id ID of employee to find activities for. Defaults to ID of token owner.
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [ListResponseActivity]
  describe 'get_recent_activities test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_recent_projects
  # Find projects with recent activities (timesheet entry registered).
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :employee_id ID of employee with recent project hours Defaults to ID of token owner.
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [ListResponseProject]
  describe 'get_recent_projects test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_total_hours
  # Find total hours registered on an employee in a specific period.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :employee_id ID of employee to find hours for. Defaults to ID of token owner.
  # @option opts [String] :start_date Format is yyyy-MM-dd (from and incl.). Defaults to today.
  # @option opts [String] :end_date Format is yyyy-MM-dd (to and excl.). Defaults to tomorrow.
  # @option opts [String] :fields Fields filter pattern
  # @return [ResponseWrapperBigDecimal]
  describe 'get_total_hours test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post
  # Add new timesheet entry. Only one entry per employee/date/activity/project combination is supported.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [TimesheetEntry] :body JSON representing the new object to be created. Should not have ID and version set.
  # @return [ResponseWrapperTimesheetEntry]
  describe 'post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_list
  # Add new timesheet entry. Multiple objects for several users can be sent in the same request.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<TimesheetEntry>] :body List of timesheet entry objects
  # @return [ListResponseTimesheetEntry]
  describe 'post_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put
  # Update timesheet entry by ID. Note: Timesheet entry object fields which are present but not set, or set to 0, will be nulled.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [TimesheetEntry] :body Partial object describing what should be updated
  # @return [ResponseWrapperTimesheetEntry]
  describe 'put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_list
  # Update timesheet entry. Multiple objects for different users can be sent in the same request.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<TimesheetEntry>] :body List of timesheet entry objects to update
  # @return [ListResponseTimesheetEntry]
  describe 'put_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search
  # Find timesheet entry corresponding with sent data.
  # 
  # @param date_from From and including
  # @param date_to To and excluding
  # @param [Hash] opts the optional parameters
  # @option opts [String] :id List of IDs
  # @option opts [String] :employee_id List of IDs
  # @option opts [String] :project_id List of IDs
  # @option opts [String] :activity_id List of IDs
  # @option opts [String] :comment Containing
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [TimesheetEntrySearchResponse]
  describe 'search test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
