=begin
#Tripletex API



OpenAPI spec version: 2.69.5

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.24

=end

require 'spec_helper'
require 'json'

# Unit tests for TripletexRubyClient::SalarypayslipApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SalarypayslipApi' do
  before do
    # run before each test
    @instance = TripletexRubyClient::SalarypayslipApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SalarypayslipApi' do
    it 'should create an instance of SalarypayslipApi' do
      expect(@instance).to be_instance_of(TripletexRubyClient::SalarypayslipApi)
    end
  end

  # unit tests for download_pdf
  # [BETA] Find payslip (PDF document) by ID.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'download_pdf test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get
  # [BETA] Find payslip by ID.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Fields filter pattern
  # @return [ResponseWrapperPayslip]
  describe 'get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search
  # [BETA] Find payslips corresponding with sent data.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :id List of IDs
  # @option opts [String] :employee_id List of IDs
  # @option opts [String] :wage_transaction_id List of IDs
  # @option opts [String] :activity_id List of IDs
  # @option opts [Integer] :year_from From and including
  # @option opts [Integer] :year_to To and excluding
  # @option opts [Integer] :month_from From and including
  # @option opts [Integer] :month_to To and excluding
  # @option opts [String] :voucher_date_from From and including
  # @option opts [String] :voucher_date_to To and excluding
  # @option opts [String] :comment Containing
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [ListResponsePayslip]
  describe 'search test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
