=begin
#Tripletex API



OpenAPI spec version: 2.69.5

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.24

=end

require 'spec_helper'
require 'json'

# Unit tests for TripletexRubyClient::SaftApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SaftApi' do
  before do
    # run before each test
    @instance = TripletexRubyClient::SaftApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SaftApi' do
    it 'should create an instance of SaftApi' do
      expect(@instance).to be_instance_of(TripletexRubyClient::SaftApi)
    end
  end

  # unit tests for export_saft
  # [BETA] Create SAF-T export for the Tripletex account.
  # 
  # @param year Year to export
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'export_saft test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for import_saft
  # [BETA] Import SAF-T. Send XML file as multipart form.
  # 
  # @param saft_file The SAF-T file (XML)
  # @param mapping_file Mapping of chart of accounts (Excel). See https://tripletex.no/resources/examples/saft_account_mapping.xls
  # @param import_customer_vendors Create customers and suppliers
  # @param create_missing_accounts Create new accounts
  # @param import_start_balance_from_opening Create an opening balance from the import file&#39;s starting balance.
  # @param import_start_balance_from_closing Create an opening balance from the import file&#39;s outgoing balance.
  # @param import_vouchers Create vouchers
  # @param import_departments Create departments
  # @param import_projects Create projects
  # @param tripletex_generates_customer_numbers Let Tripletex create customer and supplier numbers and ignore the numbers in the import file.
  # @param create_customer_ib Create an opening balance on accounts receivable from customers
  # @param update_account_names Overwrite existing names on accounts
  # @param create_vendor_ib Create an opening balance on accounts payable
  # @param override_voucher_date_on_discrepancy Overwrite transaction date on period discrepancies.
  # @param overwrite_customers_contacts Overwrite existing customers/contacts
  # @param only_active_customers Only active customers
  # @param only_active_accounts Only active accounts
  # @param update_start_balance Update the opening balance of main ledger accounts from the import file by import before the opening balance.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'import_saft test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
