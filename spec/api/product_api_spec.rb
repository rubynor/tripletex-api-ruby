=begin
#Tripletex API



OpenAPI spec version: 2.69.5

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.24

=end

require 'spec_helper'
require 'json'

# Unit tests for TripletexRubyClient::ProductApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ProductApi' do
  before do
    # run before each test
    @instance = TripletexRubyClient::ProductApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProductApi' do
    it 'should create an instance of ProductApi' do
      expect(@instance).to be_instance_of(TripletexRubyClient::ProductApi)
    end
  end

  # unit tests for delete
  # [BETA] Delete product.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_image
  # [BETA] Delete image.
  # 
  # @param id ID of Product containing the image to delete.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_image test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get
  # Get product by ID.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Fields filter pattern
  # @return [ResponseWrapperProduct]
  describe 'get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post
  # Create new product.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Product] :body JSON representing the new object to be created. Should not have ID and version set.
  # @return [ResponseWrapperProduct]
  describe 'post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_list
  # [BETA] Add multiple products.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Product>] :body JSON representing a list of new object to be created. Should not have ID and version set.
  # @return [ListResponseProduct]
  describe 'post_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put
  # Update product.
  # 
  # @param id Element ID
  # @param [Hash] opts the optional parameters
  # @option opts [Product] :body Partial object describing what should be updated
  # @return [ResponseWrapperProduct]
  describe 'put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_list
  # [BETA] Update a list of products.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Product>] :body JSON representing updates to object. Should have ID and version set.
  # @return [ListResponseProduct]
  describe 'put_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search
  # Find products corresponding with sent data.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :number DEPRECATED. List of product numbers (Integer only)
  # @option opts [Array<String>] :product_number List of valid product numbers
  # @option opts [String] :name Containing
  # @option opts [String] :ean Equals
  # @option opts [BOOLEAN] :is_inactive Equals
  # @option opts [BOOLEAN] :is_stock_item Equals
  # @option opts [BOOLEAN] :is_supplier_product Equals
  # @option opts [String] :supplier_id Equals
  # @option opts [String] :currency_id Equals
  # @option opts [String] :vat_type_id Equals
  # @option opts [String] :product_unit_id Equals
  # @option opts [String] :department_id Equals
  # @option opts [String] :account_id Equals
  # @option opts [Float] :cost_excluding_vat_currency_from From and including
  # @option opts [Float] :cost_excluding_vat_currency_to To and excluding
  # @option opts [Float] :price_excluding_vat_currency_from From and including
  # @option opts [Float] :price_excluding_vat_currency_to To and excluding
  # @option opts [Float] :price_including_vat_currency_from From and including
  # @option opts [Float] :price_including_vat_currency_to To and excluding
  # @option opts [Integer] :from From index
  # @option opts [Integer] :count Number of elements to return
  # @option opts [String] :sorting Sorting pattern
  # @option opts [String] :fields Fields filter pattern
  # @return [ListResponseProduct]
  describe 'search test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upload_image
  # [BETA] Upload image to Product. Existing image on product will be replaced if exists
  # 
  # @param id Product ID to upload image to.
  # @param file The file
  # @param [Hash] opts the optional parameters
  # @return [ResponseWrapperProduct]
  describe 'upload_image test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
